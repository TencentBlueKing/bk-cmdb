/*
 * Tencent is pleased to support the open source community by making 蓝鲸 available.
 * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

package watch

import (
	"errors"

	"configcenter/src/storage/stream/types"
)

type EventType string

const (
	Create  EventType = "create"
	Update  EventType = "update"
	Delete  EventType = "delete"
	Unknown EventType = "unknown"
)

func (e EventType) Validate() error {
	switch e {
	case Create, Update, Delete:
		return nil
	default:
		return errors.New("unsupported event type")
	}
}

func ConvertOperateType(typ types.OperType) EventType {
	switch typ {
	case types.Insert:
		return Create
	case types.Replace, types.Update:
		return Update
	case types.Delete:
		return Delete
	default:
		return Unknown
	}
}

type ChainNode struct {
	// event's cluster time
	ClusterTime types.TimeStamp `json:"cluster_time"`
	// event's document object id, as is the value of "_id" in a document.
	Oid string `json:"oid"`
	// event's type
	EventType EventType `json:"type"`
	// event's resume token, if token is "", then it's a head, and no tail
	Token string `json:"token"`
	// the current node's cursor
	Cursor string `json:"cursor"`
	// generated by cmdb, and is 1:1 with mongodb's resume token
	// the next cursor's value
	NextCursor string `json:"next_cursor"`
}
