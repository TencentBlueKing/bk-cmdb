{
  "version": "2.0",
  "service": "<fullname>Amazon CloudWatch Application Insights for .NET and SQL Server</fullname> <p> Amazon CloudWatch Application Insights for .NET and SQL Server is a service that helps you detect common problems with your .NET and SQL Server-based applications. It enables you to pinpoint the source of issues in your applications (built with technologies such as Microsoft IIS, .NET, and Microsoft SQL Server), by providing key insights into detected problems.</p> <p>After you onboard your application, CloudWatch Application Insights for .NET and SQL Server identifies, recommends, and sets up metrics and logs. It continuously analyzes and correlates your metrics and logs for unusual behavior to surface actionable problems with your application. For example, if your application is slow and unresponsive and leading to HTTP 500 errors in your Application Load Balancer (ALB), Application Insights informs you that a memory pressure problem with your SQL Server database is occurring. It bases this analysis on impactful metrics and log errors. </p>",
  "operations": {
    "CreateApplication": "<p>Adds an application that is created from a resource group.</p>",
    "CreateComponent": "<p>Creates a custom component by grouping similar standalone instances to monitor.</p>",
    "DeleteApplication": "<p>Removes the specified application from monitoring. Does not delete the application.</p>",
    "DeleteComponent": "<p>Ungroups a custom component. When you ungroup custom components, all applicable monitors that are set up for the component are removed and the instances revert to their standalone status.</p>",
    "DescribeApplication": "<p>Describes the application.</p>",
    "DescribeComponent": "<p>Describes a component and lists the resources that are grouped together in a component.</p>",
    "DescribeComponentConfiguration": "<p>Describes the monitoring configuration of the component.</p>",
    "DescribeComponentConfigurationRecommendation": "<p>Describes the recommended monitoring configuration of the component.</p>",
    "DescribeObservation": "<p>Describes an anomaly or error with the application.</p>",
    "DescribeProblem": "<p>Describes an application problem.</p>",
    "DescribeProblemObservations": "<p>Describes the anomalies or errors associated with the problem.</p>",
    "ListApplications": "<p>Lists the IDs of the applications that you are monitoring. </p>",
    "ListComponents": "<p>Lists the auto-grouped, standalone, and custom components of the application.</p>",
    "ListProblems": "<p>Lists the problems with your application.</p>",
    "UpdateApplication": "<p>Updates the application.</p>",
    "UpdateComponent": "<p>Updates the custom component name and/or the list of resources that make up the component.</p>",
    "UpdateComponentConfiguration": "<p>Updates the monitoring configurations for the component. The configuration input parameter is an escaped JSON of the configuration and should match the schema of what is returned by <code>DescribeComponentConfigurationRecommendation</code>.</p>"
  },
  "shapes": {
    "AffectedResource": {
      "base": null,
      "refs": {
        "Problem$AffectedResource": "<p>The resource affected by the problem.</p>"
      }
    },
    "ApplicationComponent": {
      "base": "<p>Describes a standalone resource or similarly grouped resources that the application is made up of.</p>",
      "refs": {
        "ApplicationComponentList$member": null,
        "DescribeComponentResponse$ApplicationComponent": null
      }
    },
    "ApplicationComponentList": {
      "base": null,
      "refs": {
        "ListComponentsResponse$ApplicationComponentList": "<p>The list of application components.</p>"
      }
    },
    "ApplicationInfo": {
      "base": "<p>Describes the status of the application.</p>",
      "refs": {
        "ApplicationInfoList$member": null,
        "CreateApplicationResponse$ApplicationInfo": "<p>Information about the application.</p>",
        "DescribeApplicationResponse$ApplicationInfo": "<p>Information about the application.</p>",
        "UpdateApplicationResponse$ApplicationInfo": "<p>Information about the application. </p>"
      }
    },
    "ApplicationInfoList": {
      "base": null,
      "refs": {
        "ListApplicationsResponse$ApplicationInfoList": "<p>The list of applications.</p>"
      }
    },
    "BadRequestException": {
      "base": "<p>The request is not understood by the server.</p>",
      "refs": {
      }
    },
    "ComponentConfiguration": {
      "base": null,
      "refs": {
        "DescribeComponentConfigurationRecommendationResponse$ComponentConfiguration": "<p>The recommended configuration settings of the component. The value is the escaped JSON of the configuration.</p>",
        "DescribeComponentConfigurationResponse$ComponentConfiguration": "<p>The configuration settings of the component. The value is the escaped JSON of the configuration.</p>",
        "UpdateComponentConfigurationRequest$ComponentConfiguration": "<p>The configuration settings of the component. The value is the escaped JSON of the configuration. For more information about the JSON format, see <a href=\"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/working-with-json.html\">Working with JSON</a>. You can send a request to <code>DescribeComponentConfigurationRecommendation</code> to see the recommended configuration for a component.</p>"
      }
    },
    "ComponentName": {
      "base": null,
      "refs": {
        "ApplicationComponent$ComponentName": "<p>The name of the component.</p>",
        "CreateComponentRequest$ComponentName": "<p>The name of the component.</p>",
        "DeleteComponentRequest$ComponentName": "<p>The name of the component.</p>",
        "DescribeComponentConfigurationRecommendationRequest$ComponentName": "<p>The name of the component.</p>",
        "DescribeComponentConfigurationRequest$ComponentName": "<p>The name of the component.</p>",
        "DescribeComponentRequest$ComponentName": "<p>The name of the component.</p>",
        "UpdateComponentConfigurationRequest$ComponentName": "<p>The name of the component.</p>",
        "UpdateComponentRequest$ComponentName": "<p>The name of the component.</p>"
      }
    },
    "CreateApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateComponentRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateComponentResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteComponentRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteComponentResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeComponentConfigurationRecommendationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeComponentConfigurationRecommendationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeComponentConfigurationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeComponentConfigurationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeComponentRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeComponentResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeObservationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeObservationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeProblemObservationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeProblemObservationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeProblemRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeProblemResponse": {
      "base": null,
      "refs": {
      }
    },
    "EndTime": {
      "base": null,
      "refs": {
        "ListProblemsRequest$EndTime": "<p>The time when the problem ended, in epoch seconds. If not specified, problems within the past seven days are returned.</p>",
        "Observation$EndTime": "<p>The time when the observation ended, in epoch seconds.</p>",
        "Problem$EndTime": "<p>The time when the problem ended, in epoch seconds.</p>"
      }
    },
    "ErrorMsg": {
      "base": null,
      "refs": {
        "BadRequestException$Message": null,
        "InternalServerException$Message": null,
        "ResourceInUseException$Message": null,
        "ResourceNotFoundException$Message": null,
        "ValidationException$Message": null
      }
    },
    "Feedback": {
      "base": null,
      "refs": {
        "Problem$Feedback": "<p>Feedback provided by the user about the problem.</p>"
      }
    },
    "FeedbackKey": {
      "base": null,
      "refs": {
        "Feedback$key": null
      }
    },
    "FeedbackValue": {
      "base": null,
      "refs": {
        "Feedback$value": null
      }
    },
    "Insights": {
      "base": null,
      "refs": {
        "Problem$Insights": "<p>A detailed analysis of the problem using machine learning.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>The server encountered an internal error and is unable to complete the request.</p>",
      "refs": {
      }
    },
    "LifeCycle": {
      "base": null,
      "refs": {
        "ApplicationInfo$LifeCycle": "<p>The lifecycle of the application. </p>"
      }
    },
    "LineTime": {
      "base": null,
      "refs": {
        "Observation$LineTime": "<p>The timestamp in the CloudWatch Logs that specifies when the matched line occurred.</p>"
      }
    },
    "ListApplicationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListComponentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListComponentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListProblemsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListProblemsResponse": {
      "base": null,
      "refs": {
      }
    },
    "LogFilter": {
      "base": null,
      "refs": {
        "Observation$LogFilter": "<p>The log filter of the observation.</p>"
      }
    },
    "LogGroup": {
      "base": null,
      "refs": {
        "Observation$LogGroup": "<p>The log group name.</p>"
      }
    },
    "LogText": {
      "base": null,
      "refs": {
        "Observation$LogText": "<p>The log text of the observation.</p>"
      }
    },
    "MaxEntities": {
      "base": null,
      "refs": {
        "ListApplicationsRequest$MaxResults": "<p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "ListComponentsRequest$MaxResults": "<p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "ListProblemsRequest$MaxResults": "<p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>"
      }
    },
    "MetricName": {
      "base": null,
      "refs": {
        "Observation$MetricName": "<p>The name of the observation metric.</p>"
      }
    },
    "MetricNamespace": {
      "base": null,
      "refs": {
        "Observation$MetricNamespace": "<p>The namespace of the observation metric.</p>"
      }
    },
    "Monitor": {
      "base": null,
      "refs": {
        "ApplicationComponent$Monitor": "<p>Indicates whether the application component is monitored. </p>",
        "DescribeComponentConfigurationResponse$Monitor": "<p>Indicates whether the application component is monitored.</p>",
        "UpdateComponentConfigurationRequest$Monitor": "<p>Indicates whether the application component is monitored.</p>"
      }
    },
    "NewComponentName": {
      "base": null,
      "refs": {
        "UpdateComponentRequest$NewComponentName": "<p>The new name of the component.</p>"
      }
    },
    "Observation": {
      "base": "<p>Describes an anomaly or error with the application.</p>",
      "refs": {
        "DescribeObservationResponse$Observation": "<p>Information about the observation.</p>",
        "ObservationList$member": null
      }
    },
    "ObservationId": {
      "base": null,
      "refs": {
        "DescribeObservationRequest$ObservationId": "<p>The ID of the observation.</p>",
        "Observation$Id": "<p>The ID of the observation type.</p>"
      }
    },
    "ObservationList": {
      "base": null,
      "refs": {
        "RelatedObservations$ObservationList": "<p>The list of observations related to the problem.</p>"
      }
    },
    "OpsCenterEnabled": {
      "base": null,
      "refs": {
        "ApplicationInfo$OpsCenterEnabled": "<p> Indicates whether Application Insights will create opsItems for any problem detected by Application Insights for an application. </p>",
        "CreateApplicationRequest$OpsCenterEnabled": "<p> When set to <code>true</code>, creates opsItems for any problems detected on an application. </p>",
        "UpdateApplicationRequest$OpsCenterEnabled": "<p> When set to <code>true</code>, creates opsItems for any problems detected on an application. </p>"
      }
    },
    "OpsItemSNSTopicArn": {
      "base": null,
      "refs": {
        "ApplicationInfo$OpsItemSNSTopicArn": "<p> The SNS topic provided to Application Insights that is associated to the created opsItems to receive SNS notifications for opsItem updates. </p>",
        "CreateApplicationRequest$OpsItemSNSTopicArn": "<p> The SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem. </p>",
        "UpdateApplicationRequest$OpsItemSNSTopicArn": "<p> The SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.</p>"
      }
    },
    "PaginationToken": {
      "base": null,
      "refs": {
        "ListApplicationsRequest$NextToken": "<p>The token to request the next page of results.</p>",
        "ListApplicationsResponse$NextToken": "<p>The token used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. </p>",
        "ListComponentsRequest$NextToken": "<p>The token to request the next page of results.</p>",
        "ListComponentsResponse$NextToken": "<p>The token to request the next page of results.</p>",
        "ListProblemsRequest$NextToken": "<p>The token to request the next page of results.</p>",
        "ListProblemsResponse$NextToken": "<p>The token used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. </p>"
      }
    },
    "Problem": {
      "base": "<p>Describes a problem that is detected by correlating observations.</p>",
      "refs": {
        "DescribeProblemResponse$Problem": "<p>Information about the problem. </p>",
        "ProblemList$member": null
      }
    },
    "ProblemId": {
      "base": null,
      "refs": {
        "DescribeProblemObservationsRequest$ProblemId": "<p>The ID of the problem.</p>",
        "DescribeProblemRequest$ProblemId": "<p>The ID of the problem.</p>",
        "Problem$Id": "<p>The ID of the problem.</p>"
      }
    },
    "ProblemList": {
      "base": null,
      "refs": {
        "ListProblemsResponse$ProblemList": "<p>The list of problems. </p>"
      }
    },
    "RelatedObservations": {
      "base": "<p>Describes observations related to the problem.</p>",
      "refs": {
        "DescribeProblemObservationsResponse$RelatedObservations": "<p>Observations related to the problem.</p>"
      }
    },
    "Remarks": {
      "base": null,
      "refs": {
        "ApplicationInfo$Remarks": "<p>The issues on the user side that block Application Insights from successfully monitoring an application.</p>"
      }
    },
    "RemoveSNSTopic": {
      "base": null,
      "refs": {
        "UpdateApplicationRequest$RemoveSNSTopic": "<p> Disassociates the SNS topic from the opsItem created for detected problems.</p>"
      }
    },
    "ResourceARN": {
      "base": null,
      "refs": {
        "ResourceList$member": null
      }
    },
    "ResourceGroupName": {
      "base": null,
      "refs": {
        "ApplicationInfo$ResourceGroupName": "<p>The name of the resource group used for the application.</p>",
        "CreateApplicationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "CreateComponentRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "DeleteApplicationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "DeleteComponentRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "DescribeApplicationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "DescribeComponentConfigurationRecommendationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "DescribeComponentConfigurationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "DescribeComponentRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "ListComponentsRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "ListProblemsRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "Problem$ResourceGroupName": "<p>The name of the resource group affected by the problem.</p>",
        "UpdateApplicationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "UpdateComponentConfigurationRequest$ResourceGroupName": "<p>The name of the resource group.</p>",
        "UpdateComponentRequest$ResourceGroupName": "<p>The name of the resource group.</p>"
      }
    },
    "ResourceInUseException": {
      "base": "<p>The resource is already created or in use.</p>",
      "refs": {
      }
    },
    "ResourceList": {
      "base": null,
      "refs": {
        "CreateComponentRequest$ResourceList": "<p>The list of resource ARNs that belong to the component.</p>",
        "DescribeComponentResponse$ResourceList": "<p>The list of resource ARNs that belong to the component.</p>",
        "UpdateComponentRequest$ResourceList": "<p>The list of resource ARNs that belong to the component.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The resource does not exist in the customer account.</p>",
      "refs": {
      }
    },
    "ResourceType": {
      "base": null,
      "refs": {
        "ApplicationComponent$ResourceType": "<p>The resource type. Supported resource types include EC2 instances, Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.</p>"
      }
    },
    "SeverityLevel": {
      "base": null,
      "refs": {
        "Problem$SeverityLevel": "<p>A measure of the level of impact of the problem.</p>"
      }
    },
    "SourceARN": {
      "base": null,
      "refs": {
        "Observation$SourceARN": "<p>The source resource ARN of the observation.</p>"
      }
    },
    "SourceType": {
      "base": null,
      "refs": {
        "Observation$SourceType": "<p>The source type of the observation.</p>"
      }
    },
    "StartTime": {
      "base": null,
      "refs": {
        "ListProblemsRequest$StartTime": "<p>The time when the problem was detected, in epoch seconds. If you don't specify a time frame for the request, problems within the past seven days are returned.</p>",
        "Observation$StartTime": "<p>The time when the observation was first detected, in epoch seconds.</p>",
        "Problem$StartTime": "<p>The time when the problem started, in epoch seconds.</p>"
      }
    },
    "Status": {
      "base": null,
      "refs": {
        "Problem$Status": "<p>The status of the problem.</p>"
      }
    },
    "Tier": {
      "base": null,
      "refs": {
        "ApplicationComponent$Tier": "<p>The stack tier of the application component.</p>",
        "DescribeComponentConfigurationRecommendationRequest$Tier": "<p>The tier of the application component. Supported tiers include <code>DOT_NET_WORKER</code>, <code>DOT_NET_WEB</code>, <code>SQL_SERVER</code>, and <code>DEFAULT</code>.</p>",
        "DescribeComponentConfigurationResponse$Tier": "<p>The tier of the application component. Supported tiers include <code>DOT_NET_WORKER</code>, <code>DOT_NET_WEB</code>, <code>SQL_SERVER</code>, and <code>DEFAULT</code> </p>",
        "UpdateComponentConfigurationRequest$Tier": "<p>The tier of the application component. Supported tiers include <code>DOT_NET_WORKER</code>, <code>DOT_NET_WEB</code>, <code>SQL_SERVER</code>, and <code>DEFAULT</code>.</p>"
      }
    },
    "Title": {
      "base": null,
      "refs": {
        "Problem$Title": "<p>The name of the problem.</p>"
      }
    },
    "Unit": {
      "base": null,
      "refs": {
        "Observation$Unit": "<p>The unit of the source observation metric.</p>"
      }
    },
    "UpdateApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateComponentConfigurationRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateComponentConfigurationResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateComponentRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateComponentResponse": {
      "base": null,
      "refs": {
      }
    },
    "ValidationException": {
      "base": "<p>The parameter is not valid.</p>",
      "refs": {
      }
    },
    "Value": {
      "base": null,
      "refs": {
        "Observation$Value": "<p>The value of the source observation metric.</p>"
      }
    }
  }
}
