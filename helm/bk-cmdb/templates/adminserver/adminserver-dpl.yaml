{{- if .Values.adminserver.enabled }}
apiVersion: {{ .Values.ApiVersion.Deployment }}
kind: Deployment
metadata:
  name: "{{ template "bk-cmdb.fullname" . }}-adminserver"
  labels:
    {{- include "bk-cmdb.labels" . | nindent 4 }}
    component: adminserver
spec:
  replicas: {{ .Values.adminserver.replicas }}
  selector:
    matchLabels:
      {{- include "bk-cmdb.matchLabels" . | nindent 6 }}
      component: adminserver
  template:
    metadata:
      labels:
        {{- include "bk-cmdb.labels" . | nindent 8 }}
        component: adminserver
      {{- with .Values.adminserver.annotations }}
      annotations:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.adminserver.podAnnotations }}
        {{ toYaml .Values.adminserver.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      containers:
      - name: adminserver
        image: {{ .Values.adminserver.image.repository }}:{{ .Values.adminserver.image.tag }}
        workingDir: /data/bin/bk-cmdb/cmdb_adminserver/
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["./cmdb_adminserver"]
        args:
        - --addrport=$(POD_IP):{{ .Values.adminserver.port }}
        - --config=/etc/configures/migrate.conf
        {{- if .Values.adminserver.command.logDir }}
        - --log-dir
        - {{ .Values.adminserver.command.logDir }}
        {{- end -}}
        {{- if .Values.adminserver.command.logLevel }}
        - --v
        - {{ .Values.adminserver.command.logLevel | quote }}
        {{- end -}}
        {{- if .Values.adminserver.command.logtostderr }}
        - --logtostderr
        - {{ .Values.adminserver.command.logtostderr  | quote }}
        {{- end }}
        - "--enable-auth"
        - {{ .Values.cmdb.auth.enable | quote }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.adminserver.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.adminserver.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        {{- if .Values.adminserver.resources }}
        resources:
          {{ toYaml .Values.adminserver.resources | indent 10 }}
        {{- end }}
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        {{- if .Values.adminserver.env }}
          {{ toYaml .Values.adminserver.env | indent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.adminserver.port }}
        volumeMounts:
        - name: configures
          mountPath: /etc/configures
        {{- if .Values.adminserver.volumeMounts }}
        {{- with .Values.adminserver.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
      volumes:
      - name: configures
        configMap:
          name: {{ .Release.Name }}-configures
      {{- if .Values.adminserver.volumes }}
      {{- with .Values.adminserver.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      {{- with .Values.adminserver.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.adminserver.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.adminserver.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 }}
      {{- end }}
{{- end }}
