{{- if .Values.migrate.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "bk-cmdb.fullname" . }}-bootstrap-{{ .Release.Revision }}
  labels:
    app: {{ template "bk-cmdb.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  ttlSecondsAfterFinished: 600
  completions: 1
  parallelism: 1
  template:
    spec:
      initContainers:
        - name: check-admin
          image: {{ template "cmdb.basicImagesAddress" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c"]
          args:
            - |
              /bin/bash <<'EOF'

              # test adminserver alive
              while :
              do
                  res=$(curl -s -X GET \
                  -H 'Content-Type:application/json' \
                  -H 'BK_USER:migrate' \
                  -H 'HTTP_BLUEKING_SUPPLIER_ID:0' \
                  "http://{{ template "bk-cmdb.adminserver" . }}:80/migrate/v3/healthz"
                  )
                  echo "$res"
                  if [[ $(echo "$res" | jq -r .result) = "true" ]]; then
                    break
                  fi

                  sleep 1
              done

              echo "check admin done"
              EOF
      containers:
      - name: cmdb-migrate
        image: {{ template "cmdb.basicImagesAddress" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - sh
        - "-c"
        - |
          /bin/bash <<'EOF'
          res=$(curl -s -X POST \
          -H 'Content-Type:application/json' \
          -H 'BK_USER:migrate' \
          -H 'HTTP_BLUEKING_SUPPLIER_ID:0' \
          "http://{{ template "bk-cmdb.adminserver" . }}:80/migrate/v3/migrate/community/0"
          )
          echo "$res"
          if ! [[ $(echo "$res" | jq -r .result) = "true" ]]; then
            echo "migration failed."
            exit 1
          fi
          EOF
      restartPolicy: OnFailure
  backoffLimit: 20
{{- end }}
