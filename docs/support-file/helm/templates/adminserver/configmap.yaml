apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-adminserver-configures
data:
{{/*
  {{- $files := .Files }}
  {{- range tuple "common.yaml" "extra.yaml" "migrate.yaml"  "mongodb.yaml" "redis.yaml" }}
  {{ . }}: |-
    {{ printf "configures/%s" . | $files.Get }}
  {{- end }}
*/}}
  common.yaml: |-
    #elasticsearch相关
    es:
      # 全文检索功能开关(取值：off/on)，默认是off，开启是on
      fullTextSearch: {{ .Values.common.es.fullTextSearch | quote }}
      #elasticsearch服务监听url，默认是[http://127.0.0.1:9200](http://127.0.0.1:9200/)
      url: {{ include "cmdb.elasticsearch.urlAndPort" . | quote }}
      # es 认证使用
      #用户
      usr: {{ .Values.common.es.usr }}
      #密码
      pwd: {{ .Values.common.es.pwd }}
    # esb配置
    esb:
      addr: {{ .Values.bkComponentApiUrl }}
      appCode: {{ .Values.common.esb.appCode }}
      appSecret: {{ .Values.common.esb.appSecret }}
      insecureSkipVerify: true
      certFile:
      keyFile:
      caFile:
      password:
    # web_server专属配置
    webServer:
      api:
        version:  v3
      #会话相关
      session:
        #会话名
        name: {{ .Values.common.webServer.session.name }}
        skip: "0"
        #是否支持同时登录同一用户，0为不支持，1为支持
        multipleOwner: {{ .Values.common.webServer.session.multipleOwner }}
        #账号密码，以 : 分割
        userInfo: {{ .Values.common.webServer.session.userInfo }}
      site:
        #该值表示部署完成后,输入到浏览器中访问的cmdb 网址
        domainUrl: {{ .Values.common.webServer.site.domainUrl }}
        httpsDomainUrl: {{ .Values.common.webServer.site.httpsDomainUrl }}
        #登录地址
        bkLoginUrl: {{ include "cmdb.webserver.bkLoginUrl" . }}
        bkHttpsLoginUrl: {{ include "cmdb.webserver.bkHttpsLoginUrl" . }}
        appCode: {{ .Values.common.webServer.site.appCode }}
        checkUrl: {{ .Values.bkLoginApiUrl }}/accounts/get_user/?bk_token=
        resourcesPath: {{ .Values.common.webServer.site.resourcesPath }}
        #前端基础页面位置
        htmlRoot: {{ .Values.common.webServer.site.htmlRoot }}
        authscheme: {{ .Values.common.webServer.site.authScheme }}
        bkComponentApiUrl:  {{ include "cmdb.webserver.bkComponentApiUrl" . }}
        paasDomainUrl: {{ include "cmdb.webserver.paas_domain_url" . }}
        # bkDomain 用于配置前端需要的cookie domain地址
        bkDomain: {{ .Values.common.webServer.site.bkDomain }}
        #帮助文档地址
        helpDocUrl: {{ .Values.common.webServer.site.helpDocUrl }}
        paas:
          # pass的tls相关配置
          tls:
            # 客户端是否验证服务端证书，包含证书链和主机名，bool值, true为不校验, false为校验
            insecureSkipVerify: {{ .Values.common.paas.tls.insecureSkipVerify }}
            # 服务使用的证书的路径,如:/data/cmdb/cert/server.crt
            certFile: {{ .Values.common.paas.tls.certFile }}
            # 服务使用的证书对应的密钥的路径,如:/data/cmdb/cert/server.key
            keyFile: {{ .Values.common.paas.tls.keyFile }}
            # CA证书的路径，用于验证对方证书,如:/data/cmdb/cert/ca.crt
            caFile: {{ .Values.common.paas.tls.caFile }}
            # 用于解密根据RFC1423加密的证书密钥的PEM块
            password: {{ .Values.common.paas.tls.password }}
      app:
        authAppCode: {{ .Values.common.webServer.app.authAppCode }}
        authUrl: {{ .Values.common.webServer.app.authUrl }}
        agentAppUrl: {{ .Values.bkNodemanUrl }}
        #权限模式，web页面使用，可选值: internal, iam
        authscheme: {{ .Values.common.webServer.app.authScheme }}
      login:
        # 使用的登录系统， skip-login 免登陆模式， blueking 默认登录模式， 使用蓝鲸登录, oa 使用公司oa进行登陆
        version: {{ .Values.common.webServer.login.version }}
      #cmdb版本日志存放路径配置
      changelogPath:
        #中文版版本日志存放路径
        ch: {{ .Values.common.webServer.changelogPath.ch }}
        #英文版版本日志存放路径
        en: {{ .Values.common.webServer.changelogPath.en }}
      #是否启用消息通知
      enableNotification: {{ .Values.common.webServer.enableNotification }}
    # operation_server专属配置
    operationServer:
      timer:
        #00:00-23:59,operation_server从配置文件读取的时间,默认是为00:30
        #定时同步的时间点
        # 00:00 - 23:59
        spec: {{ .Values.common.operationServer.timer.spec }}
      # 禁用运营统计数据统计功能，默认false，如果设置为true，将无法查看定时统计的主机、模型实例等的变化数据
      disableOperationStatistic: {{ .Values.common.operationServer.disableStatistic }}
    #auth_server专属配置
    authServer:
      #蓝鲸权限中心地址,可配置多个,用,(逗号)分割
      address: {{ .Values.bkIamApiUrl }}
      #cmdb项目在蓝鲸权限中心的应用编码
      appCode: {{ .Values.common.auth.appCode }}
      #cmdb项目在蓝鲸权限中心的应用密钥
      appSecret: {{ .Values.common.auth.appSecret }}
      #开发商ID
      supplierID: {{ .Values.common.authServer.supplierID }}
      authCenter:
        # 权限中心tls配置
        tls:
          # 客户端是否验证服务端证书，包含证书链和主机名，bool值, true为不校验, false为校验
          insecureSkipVerify: {{ .Values.common.auth.tls.insecureSkipVerify }}
          # 服务使用的证书的路径,如:/data/cmdb/cert/server.crt
          certFile: {{ .Values.common.auth.tls.certFile }}
          # 服务使用的证书对应的密钥的路径,如:/data/cmdb/cert/server.key
          keyFile: {{ .Values.common.auth.tls.keyFile }}
          # CA证书路径，用于验证对方证书,如:/data/cmdb/cert/ca.crt
          caFile: {{ .Values.common.auth.tls.caFile }}
          # 用于解密根据RFC1423加密的证书密钥的PEM块
          password: {{ .Values.common.auth.tls.password }}
      # 空间级权限版本中，find_module_host_relation、find_host_by_service_template、find_host_by_set_template、
      # list_biz_hosts、list_biz_hosts_topo、find_host_by_topo、list_host_total_mainline_topo这几个上esb接口,
      # 可以配置不进行业务访问鉴权
      skipViewBizAuth: {{ .Values.common.auth.skipViewBizAuth }}
    #cloudServer专属配置
    cloudServer:
      # 加密服务使用
      cryptor:
        enableCryptor: {{ .Values.common.cloudServer.cryptor.enableCryptor }}
        # 访问密码服务来获取密钥的URL，格式如/api/v1/secrets/cloud_account
        secretKeyUrl: {{ .Values.common.cloudServer.cryptor.secretKeyUrl }}
        # 密钥服务的地址，必须以http://或者https://开头
        secretsAddrs: {{ .Values.common.cloudServer.cryptor.secretsAddrs }}
        # 密码服务的权限凭证Token
        secretsToken: {{ .Values.common.cloudServer.cryptor.secretsToken }}
        # 密码服务的项目名称
        secretsProject: {{ .Values.common.cloudServer.cryptor.secretsProject }}
        # 密码服务的环境名称
        secretsEnv: {{ .Values.common.cloudServer.cryptor.secretsEnv }}
      syncTask:
        # 同步周期,最小为5分钟
        syncPeriodMinutes: {{ .Values.common.cloudServer.syncTask.syncPeriodMinutes }}
    # 新版加解密相关配置，包括密钥等信息，如果设置了该配置项，则cloudServer使用该配置而非cloudServer.cryptor配置进行加解密
    crypto:
      # 是否开启加密
      enabled: {{ .Values.common.crypto.enabled }}
      # 加密算法类型，枚举值：CLASSIC（国际算法）、SHANGMI（国密算法）
      algorithm: {{ .Values.global.bkCryptoType }}
      # 使用SM4算法时所需的配置
      sm4:
        # 密钥
        key: {{ .Values.common.crypto.sm4.key }}
      # 使用AES-GCM算法时所需的配置
      aesGcm:
        # 密钥
        key: {{ .Values.common.crypto.aesGcm.key }}
    #datacollection专属配置
    datacollection:
      hostsnap:
        # 主机静态数据采集模式，将数据导入kafka或者redis，可选值是 kafka、redis，默认值为redis（仅用于新插件bkmonitorbeat）
        reportMode: {{ .Values.common.datacollection.hostSnapshot.reportMode }}
        # 当主机快照数据属性,如cpu,bk_cpu_mhz,bk_disk,bk_mem这些数值型数据变动的范围大于该配置的值时，进行db数据的更新，默认值为10%，最小值为5%，以百分比为单位
        changeRangePercent: {{ .Values.common.datacollection.hostSnapshot.changeRangePercent}}
        # 用于设置主机快照key在redis中的过期时间，该时间会有上下50%的波动，当key存在时，同一id的主机数据不会更新，默认值为10分钟，最小值为5分钟，以分钟为单位
        changeCountExpireMinute: {{ .Values.common.datacollection.hostSnapshot.changeCountExpireMinute}}
        # 用于设置单个服务主机快照处理请求能力，起到限流的作用，令牌桶配置，最多请求数通过burst设置。qps的默认值为40，burst的默认值为100
        rateLimiter:
          qps: {{ .Values.common.datacollection.hostSnapshot.rateLimiter.qps }}
          burst: {{ .Values.common.datacollection.hostSnapshot.rateLimiter.burst }}
        # 主机快照属性，如cpu,bk_cpu_mhz,bk_disk,bk_mem等数据的处理时间窗口，用于限制在指定周期的前多少分钟可以让请求通过，超过限定时间将不会处理请求。
        # 它的下一级有三个参数，atTime,checkIntervalHours，windowMinute 当不配置windowMinute，窗口不生效。当配置了windowMinute,至少配置atTime
        # 或者checkIntervalHours中的一个，否则不生效。当atTime和checkIntervalHours都配置时，取atTime这个配置的语义功能
        # 如果窗口生效，启动的时候，会先跑完windowMinutes，然后再生效。
        timeWindow:
          # atTime，设置一天中，几点开启时间窗口，如配置成14:40，表示14:40开启窗口，如果配置格式不正确，默认值为1:00
          atTime: {{ .Values.common.datacollection.hostSnapshot.timeWindow.atTime }}
          # checkIntervalHours，规定每隔几个小时窗口开启，单位为小时，如配置成 3，表示每隔3个小时，开启时间窗口，如果配置格式不正确，默认值为 1
          checkIntervalHours: {{ .Values.common.datacollection.hostSnapshot.timeWindow.checkIntervalHours }}
          # windowMinutes，代表开启时间窗口后，多长时间内请求可以通过，单位为分钟。如配置成 60，表示开启窗口时间60分钟内请求可以通过。
          # 注意：该时间不能大于窗口每次开启的间隔时间，取值范围不能小于等于0，如果配置不正确，默认值为15
          windowMinutes: {{ .Values.common.datacollection.hostSnapshot.timeWindow.windowMinutes }}

    # 监控配置， monitor配置项必须存在
    monitor:
      # 监控插件名称，有noop，blueking， 不填时默认为noop
      pluginName: {{ .Values.common.monitor.pluginName }}
      # 是否开启监控
      enableMonitor: {{ .Values.common.monitor.enabled }}
      # 当使用blueking监控插件时，上报数据所需要的数据通道标识,如1500000
      dataID: {{ .Values.common.monitor.dataId }}
      # 采集数据后能够缓存的队列长度，设置范围为1～1000, 默认为100
      queueSize: {{ .Values.common.monitor.queueSize }}
      # 当使用blueking监控插件时，上报数据的接收端URL
      bkMonitorReportUrl: {{ .Values.common.monitor.bkMonitorReportUrl }}
      # 当使用blueking监控插件时，上报数据所需要的数据通道标识验证码，防止数据误上报至其他管道
      accessToken: {{ .Values.common.monitor.accessToken }}
      # 用于对数据上报进行频率控制和限流
      # qps的设置范围为1～50，默认值为10
      # burst的设置范围为1～100，默认值为20
      rateLimiter:
        qps: {{ .Values.common.monitor.rateLimiter.qps }}
        burst: {{ .Values.common.monitor.rateLimiter.burst }}
    # cacheService相关配置
    cacheService:
    # 业务简要拓扑缓存的定时刷新时间，默认为15分钟，最小为2分钟。每次会将所有的业务的拓扑刷新一次到缓存中
      briefTopologySyncIntervalMinutes: {{ .Values.common.cacheService.briefTopologySyncIntervalMinutes }}
      # 业务容器拓扑缓存的定时刷新时间，默认为15分钟，最小为15分钟。每次会将所有的业务的拓扑刷新一次到缓存中
      kubeTopoSyncIntervalMinutes: {{ .Values.common.cacheService.kubeTopoSyncIntervalMinutes }}

    # openTelemetry跟踪链接入相关配置
    openTelemetry:
      # 表示是否开启openTelemetry跟踪链接入相关功能，布尔值, 默认值为false不开启
      enable: {{ .Values.common.openTelemetry.enable }}
      # openTelemetry跟踪链功能的自定义上报服务地址
      endpoint: {{ .Values.common.openTelemetry.endpoint }}
      # openTelemetry跟踪链功能的上报data_id, 用于旧版的数据上报, 和bkDataToken同时配置时，会取bkDataToken
      bkDataID: {{ .Values.common.openTelemetry.bkDataID }}
      # openTelemetry跟踪链功能的bk.data.token, 用于新版的数据上报，和bkDataID同时配置时，会取bkDataToken
      bkDataToken: {{ .Values.common.openTelemetry.bkDataToken }}
      # 连接日志平台tls配置
      tls:
        # 客户端是否验证服务端证书，包含证书链和主机名，bool值, true为不校验, false为校验
        insecureSkipVerify: {{ .Values.common.openTelemetry.tls.insecureSkipVerify }}
        # 服务使用的证书的路径,如:/data/cmdb/cert/server.crt
        certFile: {{ .Values.common.openTelemetry.tls.certFile }}
        # 服务使用的证书对应的密钥的路径,如:/data/cmdb/cert/server.key
        keyFile: {{ .Values.common.openTelemetry.tls.keyFile }}
        # CA证书的路径，用于验证对方证书,如:/data/cmdb/cert/ca.crt
        caFile: {{ .Values.common.openTelemetry.tls.caFile }}
        # 用于解密根据RFC1423加密的证书密钥的PEM块
        password: {{ .Values.common.openTelemetry.tls.password }}

    # eventServer相关配置
    eventServer:
      # 下发主机身份相关配置
      hostIdentifier:
        # 是否开始下发主机身份功能, 有两个值，true和false，当处于true时，开启下发主机身份功能，false时，关闭该功能
        startUp: {{ .Values.common.eventServer.hostIdentifier.startUp }}
        # 可选值为v1或v2, v1表示采用的是使用thrift方式连接gse，需要配置gse.apiServer和gse.taskServer
        # v2表示使用的是apigw接口与gse交互，此接口在gse2.0提供，需要配置gse.apiGW
        version: {{ .Values.common.eventServer.hostIdentifier.version }}
        # 每隔多少个小时进行一次全量主机身份批量的同步操作，整数值，单位为小时，注：刚启动服务时，会等一个周期后再进行全量同步操作
        batchSyncIntervalHours: {{ .Values.common.eventServer.hostIdentifier.batchSyncIntervalHours }}
        # 用于设置推送主机身份请求gse的taskServer能力，起到限流的作用。qps的默认值为200, 代表每秒最多推送的主机数量，burst的默认值为200
        rateLimiter:
          qps: {{ .Values.common.eventServer.hostIdentifier.rateLimiter.qps }}
          burst: {{ .Values.common.eventServer.hostIdentifier.rateLimiter.burst }}
        # 下发主机身份文件名
        fileName: {{ .Values.common.eventServer.hostIdentifier.fileName }}
        # 当下发主机为linux操作系统时，相关配置
        linux:
          # 下发主机身份文件路径
          filePath: {{ .Values.common.eventServer.hostIdentifier.linux.filePath }}
          # 下发主机身份文件所有者
          fileOwner: {{ .Values.common.eventServer.hostIdentifier.linux.fileOwner }}
          # 下发主机身份文件权限值
          filePrivilege: {{ .Values.common.eventServer.hostIdentifier.linux.filePrivilege }}
        # 当下发主机为windows操作系统时，相关配置
        windows:
          # 下发主机身份文件路径
          filePath: {{ .Values.common.eventServer.hostIdentifier.windows.filePath }}
          # 下发主机身份文件所有者
          fileOwner: {{ .Values.common.eventServer.hostIdentifier.windows.fileOwner }}
          # 下发主机身份文件权限值
          filePrivilege: {{ .Values.common.eventServer.hostIdentifier.windows.filePrivilege }}

    # apiServer相关配置
    apiServer:
      # api-server使用的jwt配置
      jwt:
        # 是否开启jwt认证功能
        enabled: {{ .Values.common.apiServer.jwt.enabled }}
        # jwt公钥
        publicKey: {{ .Values.common.apiServer.jwt.publicKey }}

    # 直接调用gse服务相关配置
    gse:
      # 调用gse的apiServer服务时相关配置
      apiServer:
        # 此配置为数组类型，可配置连接gse的apiServer的多个host:port格式的值，去建立连接
        endpoints:
    {{- range $endpoint := .Values.common.gse.apiServer.endpoints }}
          - {{ $endpoint }}
    {{- end }}
          # 证书相关信息
        insecureSkipVerify: {{ .Values.common.gse.apiServer.insecureSkipVerify }}
        certFile: {{ .Values.certPath }}/{{ .Values.common.gse.apiServer.certFile }}
        keyFile: {{ .Values.certPath }}/{{ .Values.common.gse.apiServer.keyFile }}
        caFile: {{ .Values.certPath }}/{{ .Values.common.gse.apiServer.caFile }}
        password: {{ .Values.common.gse.apiServer.password }}
      # 调用gse的taskServer服务时相关配置
      taskServer:
        # 此配置为数组类型，可配置连接gse的taskServer的多个host:port格式的值，去建立连接
        endpoints:
    {{- range $endpoint := .Values.common.gse.taskServer.endpoints }}
          - {{ $endpoint }}
    {{- end }}
        # 证书相关信息
        insecureSkipVerify: {{ .Values.common.gse.taskServer.insecureSkipVerify }}
        certFile: {{ .Values.certPath }}/{{ .Values.common.gse.taskServer.certFile }}
        keyFile: {{ .Values.certPath }}/{{ .Values.common.gse.taskServer.keyFile }}
        caFile: {{ .Values.certPath }}/{{ .Values.common.gse.taskServer.caFile }}
        password: {{ .Values.common.gse.taskServer.password }}

    # 当主机静态数据采集模式为kafka时，datacollection处理插件bkmonitorbeat采集上来的主机静态数据，选择kafka作为数据导入组件时的相关配置
    kafka:
      snap:
        brokers:
    {{- range $broker := .Values.common.kafka.brokers }}
          - {{ $broker }}
    {{- end }}
        # groupID为固定值，请勿随便修改，修改后会导致重复消费过去的数据
        groupID: {{ .Values.common.kafka.groupID }}
        # partition数量固定为1，保证消息的顺序性
        partition: {{ .Values.common.kafka.partition }}
        # 安全协议SASL_PLAINTEXT，SASL机制SCRAM-SHA-512的账号、密码信息
        user: {{ .Values.common.kafka.user }}
        password: {{ .Values.common.kafka.password }}

    # cmdb服务tls配置
    tls:
      # 客户端是否验证服务端证书，包含证书链和主机名，bool值, true为不校验, false为校验
      insecureSkipVerify: {{ .Values.common.tls.insecureSkipVerify }}
      # 服务使用的证书的路径,如:/data/cmdb/cert/server.crt
      certFile: {{ .Values.common.tls.certFile }}
      # 服务使用的证书对应的密钥的路径,如:/data/cmdb/cert/server.key
      keyFile: {{ .Values.common.tls.keyFile }}
      # CA证书的路径，用于验证对方证书,,如:/data/cmdb/cert/ca.crt
      caFile: {{ .Values.common.tls.caFile }}
      # 用于解密根据RFC1423加密的证书密钥的PEM块
      password: {{ .Values.common.tls.password }}

    # 调用apigw接口相关配置
    apiGW:
      address: {{ .Values.common.apiGW.address }}
      appCode: {{ .Values.common.apiGW.appCode }}
      appSecret: {{ .Values.common.apiGW.appSecret }}
      username: {{ .Values.common.apiGW.username }}
      tls:
        # 客户端是否验证服务端证书，包含证书链和主机名，bool值, true为不校验, false为校验
        insecureSkipVerify: {{ .Values.common.apiGW.tls.insecureSkipVerify }}
        # 服务使用的证书的路径,如:/data/cmdb/cert/server.crt
        certFile: {{ .Values.common.apiGW.tls.certFile }}
        # 服务使用的证书对应的密钥的路径,如:/data/cmdb/cert/server.key
        keyFile: {{ .Values.common.apiGW.tls.keyFile }}
        # CA证书的路径，用于验证对方证书,如:/data/cmdb/cert/ca.crt
        caFile: {{ .Values.common.apiGW.tls.caFile }}
        # 用于解密根据RFC1423加密的证书密钥的PEM块
        password: {{ .Values.common.apiGW.tls.password }}

  extra.yaml: |-
    

  migrate.yaml: |-
    configServer:
      addrs: {{ include "cmdb.configAndServiceCenter.addr" . | quote }}
      usr:
      pwd:

    registerServer:
      addrs: {{ include "cmdb.configAndServiceCenter.addr" . | quote }}
      usr:
      pwd:

    confs:
      dir: {{ .Values.adminserver.configDir }}

    errors:
      res: {{ .Values.adminserver.errors }}

    language:
      res: {{ .Values.adminserver.language }}

    hostsnap:
      dataID: 1100010

  mongodb.yaml: |-
    mongodb:
      host: {{ include "cmdb.mongodb.addr" . | quote }}
      usr: {{ include "cmdb.mongodb.usr" . | quote }}
      pwd: {{ include "cmdb.mongodb.pwd" . | quote }}
      database: {{ .Values.mongodb.externalMongodb.database }}
      maxOpenConns: {{ .Values.mongodb.externalMongodb.maxOpenConns }}
      maxIdleConns: {{ .Values.mongodb.externalMongodb.maxIdleConns }}

      mechanism: {{ .Values.mongodb.externalMongodb.mechanism }}
      rsName: {{ .Values.mongodb.externalMongodb.rsName }}
      #mongo的socket连接的超时时间，以秒为单位，默认10s，最小5s，最大30s。
      socketTimeoutSeconds: {{ .Values.mongodb.externalMongodb.socketTimeoutSeconds }}
      enable: {{ .Values.mongodb.externalMongodb.enabled }}

    watch:
      host: {{ include "cmdb.mongodb.watch.addr" . | quote }}
      usr: {{ include "cmdb.mongodb.watch.usr" . | quote }}
      pwd: {{ include "cmdb.mongodb.watch.pwd" . | quote }}
      database: {{ .Values.mongodb.watch.database }}
      maxOpenConns: {{ .Values.mongodb.watch.maxOpenConns }}
      maxIdleConns: {{ .Values.mongodb.watch.maxIdleConns }}
      mechanism: {{ .Values.mongodb.watch.mechanism }}
      rsName: {{ .Values.mongodb.watch.rsName }}
      socketTimeoutSeconds: {{ .Values.mongodb.watch.socketTimeoutSeconds }}

  redis.yaml: |-
    redis:
      host: {{ include "cmdb.redis.host" . | quote }}
      pwd: {{ include "cmdb.redis.pwd" . | quote }}
      database: {{ .Values.redis.redis.database }}
      maxOpenConns: {{ .Values.redis.redis.maxOpenConns }}
      maxIdleConns: {{ .Values.redis.redis.maxIdleConns }}
      sentinelPwd: {{ .Values.redis.redis.sentinelPwd }}
      masterName: {{ .Values.redis.redis.masterName }}
      snap:
        host: {{ include "cmdb.redis.snap.host" . | quote }}
        pwd: {{ include "cmdb.redis.snap.pwd" . | quote }}
        database: {{ .Values.redis.snapshotRedis.database }}
        maxOpenConns: {{ .Values.redis.snapshotRedis.maxOpenConns }}
        maxIdleConns: {{ .Values.redis.snapshotRedis.maxIdleConns }}
        sentinelPwd: {{ .Values.redis.snapshotRedis.sentinelPwd }}
        masterName: {{ .Values.redis.snapshotRedis.masterName }}
      discover:
        host: {{ include "cmdb.redis.discover.host" . | quote }}
        pwd: {{ include "cmdb.redis.discover.pwd" . | quote }}
        database: {{ .Values.redis.discoverRedis.database }}
        maxOpenConns: {{ .Values.redis.discoverRedis.maxOpenConns }}
        maxIdleConns: {{ .Values.redis.discoverRedis.maxIdleConns }}
        sentinelPwd: {{ .Values.redis.discoverRedis.sentinelPwd }}
        masterName: {{ .Values.redis.discoverRedis.masterName }}
      netcollect:
        host: {{ include "cmdb.redis.netcollect.host" . | quote }}
        pwd: {{ include "cmdb.redis.netcollect.pwd" . | quote }}
        database: {{ .Values.redis.netCollectRedis.database }}
        maxOpenConns: {{ .Values.redis.netCollectRedis.maxOpenConns }}
        maxIdleConns: {{ .Values.redis.netCollectRedis.maxIdleConns }}
        sentinelPwd: {{ .Values.redis.netCollectRedis.sentinelPwd }}
        masterName: {{ .Values.redis.netCollectRedis.masterName }}